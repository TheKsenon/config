from .. import loader, utils
from telethon.tl.functions.account import DeleteAccountRequest

@loader.tds
class DeleteAccountModule(loader.Module):
    """üóëÔ∏è –ú–æ–¥—É–ª—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞."""

    strings = {"name": "DeleteAccountModule"}

    @loader.command()
    async def deleteacc(self, message):
        """üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º -force."""
        args = utils.get_args(message)
        if "force" in args:
            await message.edit("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ —Å —Ñ–ª–∞–≥–æ–º -force...")
            try:
                await message.client(DeleteAccountRequest(reason="–£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."))
                await message.edit("‚úÖ –ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")
            except Exception as e:
                await message.edit(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç: {e}")
        else:
            await message.edit("‚ö†Ô∏è –î–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–ª–∞–≥ -force.")
          
